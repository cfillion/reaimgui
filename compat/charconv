// -*- C++ -*-

#ifndef REAIMGUI_CHARCONV
#define REAIMGUI_CHARCONV

#include "config.hpp"

#ifdef HAVE_STD_CHARCONV
#  ifdef HAVE_INCLUDE_NEXT
#    include_next <charconv>
#  else
#    include <../include/charconv>
#  endif
#else
#  include <system_error>
  namespace std {
    // Minimal implementaton required for our usage
    struct from_chars_result {
      const char *ptr;
      std::errc ec;
    };
    template<typename T>
    from_chars_result from_chars(const char *start, const char *end, T &out)
    {
      char *lastRead { const_cast<char *>(end) };
      const auto val { std::strtol(start, &lastRead, 10) };

      if(errno == ERANGE ||
          val < numeric_limits<T>::min() || val > numeric_limits<T>::max())
        return { start, std::errc::result_out_of_range };
      if(lastRead == start)
        return { start, std::errc::invalid_argument };

      out = val;
      return { lastRead };
    }
  }
#endif

#endif
